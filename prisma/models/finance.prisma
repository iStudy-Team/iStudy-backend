model Invoice {
  id             String    @id @db.VarChar(255)
  student_id     String    @db.VarChar(255)
  class_id       String    @db.VarChar(255)
  invoice_number String    @unique @db.VarChar(50)
  month          Int
  year           Int
  amount         Decimal   @db.Decimal(10, 2)
  discount_amount Decimal  @default(0) @db.Decimal(10, 2)
  final_amount   Decimal   @db.Decimal(10, 2)
  issue_date     DateTime  @db.Date
  due_date       DateTime  @db.Date
  status         Int       @default(0) // 0: Unpaid, 1: Paid, 2: Overdue, 3: Canceled
  description    String?   @db.Text
  created_at     DateTime  @default(now()) @db.Timestamp(6)
  updated_at     DateTime  @updatedAt @db.Timestamp(6)

  student        Student   @relation(fields: [student_id], references: [id])
  class          Class     @relation(fields: [class_id], references: [id])
  payments       Payment[]
}

model Payment {
  id               String    @id @db.VarChar(255)
  invoice_id       String    @db.VarChar(255)
  payment_date     DateTime  @db.Date
  amount           Decimal   @db.Decimal(10, 2)
  reference_number String?   @db.VarChar(100)
  received_by      String    @db.VarChar(255)
  status           Int       @default(0) // 0: Unpaid, 1: Paid, 2: Overdue, 3: Canceled
  notes            String?   @db.Text
  created_at       DateTime  @default(now()) @db.Timestamp(6)

  invoice          Invoice   @relation(fields: [invoice_id], references: [id])
  receivedBy       User      @relation(fields: [received_by], references: [id])
}

model TeacherSalary {
  id             String    @id @db.VarChar(255)
  teacher_id     String    @db.VarChar(255)
  month          Int
  year           Int
  base_salary    Decimal   @default(0) @db.Decimal(10, 2)
  session_rate   Decimal   @default(0) @db.Decimal(10, 2)
  total_sessions Int       @default(0)
  bonus          Decimal   @default(0) @db.Decimal(10, 2)
  deductions     Decimal   @default(0) @db.Decimal(10, 2)
  total_amount   Decimal   @db.Decimal(10, 2)
  payment_status Int       @default(0) // 0: Pending, 1: Paid, 2: Canceled
  payment_date   DateTime? @db.Date
  notes          String?   @db.Text
  created_at     DateTime  @default(now()) @db.Timestamp(6)
  updated_at     DateTime  @updatedAt @db.Timestamp(6)

  teacher        Teacher   @relation(fields: [teacher_id], references: [id])
}
